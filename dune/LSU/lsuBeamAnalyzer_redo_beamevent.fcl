#include "services_dune.fcl"
#include "lsu_analyzers.fcl"
#include "BeamEvent.fcl"

process_name: LSUBeamAnaRedo

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "LSU_Beam_hist.root" }
  MemoryTracker:     {}
  TimeTracker:       {}
  RandomNumberGenerator: {}
  FileCatalogMetadata:  @local::art_file_catalog_data
  @table::protodune_services
  IFBeam:            {}
}
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to run over
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
  producers:
  {
    redobeamevent:          @local::proto_beamevent
  }
  analyzers:
  {
    lsubeamanalyzer:      @local::lsu_beam_analyzer
    lsubeamanalyzerredo:      @local::lsu_beam_analyzer
  }

  reco: [ redobeamevent ]


  #define the producer and filter modules for this path, order matters, 
  #filters reject all following items.  see lines starting physics.producers below
  ana:  [ lsubeamanalyzer, lsubeamanalyzerredo ]

  trigger_paths: [reco]

  #end_paths is a keyword and contains the paths that do not modify the art::Event, 
  #ie analyzers and output streams.  these all run simultaneously
  end_paths:     [ana]  
}

### Here, we overwrite ALL module Labels with the ones defined above.
physics.analyzers.lsubeamanalyzerredo.BeamEventTag: "redobeamevent"
