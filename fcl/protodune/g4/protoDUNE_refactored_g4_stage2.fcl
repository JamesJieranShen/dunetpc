#include "services_refactored_pdune.fcl"
#include "services_dune.fcl"
//#include "largeantmodules_dune.fcl"
//#include "photpropservices_dune.fcl"
//#include "opticaldetectormodules_dune.fcl"

#include "scintillationtime_tool.fcl"

process_name: G4Stage2

services:
{
  TFileService: { fileName: "g4_protoDUNE_hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {} # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_info
  #message:      @local::dune_message_services_prod_debug
  @table::protodune_simulation_services

}
## -- NuRandomService:
services.NuRandomService.policy: "perEvent"

#services.PhotonVisibilityService:               @local::protodunev4_photonvisibilityservice
#services.LArG4Parameters.UseLitePhotons:        true

#services.Geometry.GDML: "protodune_v7.gdml"
#services.Geometry.ROOT: "protodune_v7.gdml"

source:
{
  module_type: RootInput
  maxEvents:  30000
  fileNames: ["g4_stage1_protoDUNE.root"]
}

physics:
{

  producers:
  {

    rns: {
      module_type: "RandomNumberSaver"
    }

    IonAndScint:
    {
        module_type:           "IonAndScint"
        Instances:             "LArG4DetectorServicevolTPCActive;LArG4DetectorServicevolTPCActiveOuter" # separated by semicolon
        ISCalcAlg:             "Separate" #"NEST"
    }

    PDFastSim:
    {
       module_type:            "PDFastSimPVS"
       #module_type:            "PDFastSimPAR"
       SimulationLabel:        "IonAndScint:priorSCE"
       DoSlowComponent:        true
       ScintTimeTool:          @local::ScintTimeLAr
    }

  }

  analyzers: {
    # ISCalculationAna: {             module_type: ISCalculationAna
    #       EDepModuleLabel:        "largeant:LArG4DetectorServicevolTPCActive"
    # }
    # SimDriftedElectronClusterAna: { module_type: SimDriftedElectronClusterAna
    #       EDepModuleLabel:        "elecDrift"
    # }		   

    # ISCalcAna:
    # {
    #     module_type:             ISCalcAna
    #     SimulationLabel:         "largeant:LArG4DetectorServicevolTPCActive"
    #     // ISCalcAlg:               "NEST"
    #     ISCalcAlg:               "Separate"
    # }
    # 
    # SimPh:
    # {
    #     module_type:             "SimPhotonCounter"
    #     Verbosity:               5
    #     InputModule:             "PDFastSimPVS:pvs" 
    #     MakeAllPhotonsTree:      true
    #     MakeDetectedPhotonsTree: true
    #     MakeOpDetsTree:          true
    #     MakeOpDetEventsTree:     true
    # }

  }

 simulate: [ rns, IonAndScint, PDFastSim ]

 stream1: [ out1 ]


 trigger_paths: [  simulate ] 
 end_paths:     [  stream1  ]  

}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_g4_stage2.root"
   dataTier:    "simulated"
   outputCommands: [ "keep *", "drop sim::SimEnergyDeposits_largeant_*_*"]
   fastCloning: true #will fail if the split level is not the same as for the gen stage, so turn it off
   compressionLevel: 1 #zlib argument (0-9) 
   #basketSize: 8192 #[Byte] buffer size at 8k
   #splitLevel: 0 #reduces number of buffers
   #treeMaxVirtualSize: 1 #[Byte] limits number of buffers/branch to 1 (default is 10)
 }
}

physics.producers.IonAndScint.SavePriorSCE: true

