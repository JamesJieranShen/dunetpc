#include "RawDecoder.fcl"
#include "BeamEvent.fcl"
#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "SpacePointSolver_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl" 
#include "pandoramodules_dune.fcl"
#include "calorimetry_dune10kt.fcl"
#include "calibration_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "particleid.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "showerfindermodules_dune.fcl"
#include "emshower3d.fcl"
#include "ProtoDUNETriggerFilter.fcl"
#include "protodune_tools_dune.fcl"

process_name: DecoderandReco

services:
{
    #message:              @local::dune_message_services_prod_debug

    TimeTracker:       {}
    MemoryTracker:     {}
    RandomNumberGenerator: {} 
    @table::protodune_rawdecoding_services
    FileCatalogMetadata:  @local::art_file_catalog_data
                          @table::protodune_reco_services
 #                         @table::protodune_data_services
###    ExptGeoHelperInterface:       @local::dune_geometry_helper
###    Geometry:                     @local::protodune_geo
###    DetectorClocksService:        @local::protodune_detectorclocks
###    DetectorPropertiesService:    @local::protodune_detproperties
###    LArPropertiesService:         @local::dunefd_properties
###    LArFFT:                       @local::dunefd_larfft  
###    DatabaseUtil:                 @local::dunefd_database
###    PhotonBackTrackerService:     @local::dunefd_photonbacktrackerservice
###    SpaceCharge:                  @local::protodune_spacecharge
###    NuRandomService:              @local::dune_seedservice
###    SignalShapingServiceDUNE:     @local::protodunesp_signalshapingservice
###    ChannelStatusService:         @local::dunefd_channel_status
###    ChannelGroupService:          @local::changroup_apa_pd_drop_outer
###    PdspChannelMapService:        @local::pdspchannelmap
#    RawDigitPrepService:        @local::adcprep_with_services_sim
#    RawDigitExtractService:     @local::rdx_std
    #  ChannelGroupService:          @local::changroup_apa
    message:                      @local::dune_message_services_prod_debug
    FileCatalogMetadata: {
#        campaign: "beam_prep"
        metadataFromInput: [ "dunemeta.data_stream", "dunemeta.dune_data.daqconfigname", 
                             "dunemeta.dune_data.detector_config", "dunemeta.dune_data.inconsistent_hw_config",
                             "dunemeta.dune_data.is_fake_data", "dunemeta.dune_data.accouple",
                             "dunemeta.dune_data.calibpulsemode", "dunemeta.dune_data.febaselinehigh",
                             "dunemeta.dune_data.fegain", "dunemeta.dune_data.feleak10x",
                             "dunemeta.dune_data.feleakhigh", "dunemeta.dune_data.feshapingtime", "events",
                             "data_quality.online_good_run_list" ]
        applicationVersion: "v07_08_00_04"
        fileType: "detector"
        runType: "protodune-sp"

   }
    
  TFileService: { 
      closeFileFast: true  # default
      fileName: "hist_%ifb_decoder_reco.root"
      tmpDir: "<parent-path-of-filename>"  # default
  }

#  PdspChannelMapService: {
##      FileName:         "protoDUNETPCChannelMap_v3.txt"
#      FileName:         "protoDUNETPCChannelMap_RCE_v4.txt"
#      FELIXFileName:    "protoDUNETPCChannelMap_FELIX_v4.txt"
#      SSPFileName:      "protoDUNESSPChannelMap_v1.txt"
#
#      LogLevel:         1
#  }
#    @table::protodune_services

  IFBeam:            {}
}


#services.message.destinations.LogStandardOut.threshold: "INFO"

physics:
{
    
    filters: 
    {
        trigfilter:  @local::pdsp_trigfilter_all
    }

    producers:
    {

        timingrawdecoder: @local::timing_raw_decoder   
        ssprawdecoder: @local::ssp_raw_decoder_split  
        tpcrawdecoder: @local::pdsp_tpc_raw_decoder
        ctbrawdecoder: @local::ctb_raw_decoder
        beamevent:     @local::proto_beamevent

        caldata:  @local::producer_adcprep
## stuff pasted in from the standard protoDUNE_reco.fcl
       gaushit:            @local::protodunespmc_gaushitfinder
        fasthit:            @local::dunefd_fasthitfinder
        reco3d:             @local::protodunespmc_spacepointsolver
#        # actual disambiguation
        hitfd:              @local::dunefd_hitfinderfd
        hitpdune:           @local::pdune_disambigfromsp
#        # 3d dbscan
       dbcluster:          @local::protodunespmc_dbcluster3d
#        # event feature labeling
        emtrkmichelid:      @local::protodune_emtrkmichelid
#        # reconstruction using disambiguated hits
        linecluster:        @local::protodunespmc_linecluster
        calo:               @local::dune35t_calomc
        pandora:            @local::protodune_pandora
        pandoraTrack:       @local::dune_pandoraTrackCreation
        pandoraShower:      @local::dune_pandoraShowerCreation
        pandoracalo:        @local::dune10kt_calomc
        pandorapid:         @local::standard_chi2pid
        pandoracali:        @local::protodunespmc_calibrationdedx
        pandoracalipid:     @local::standard_chi2pid  
        pmtrack:            @local::dunefd_pmalgtrackmaker
        pmtrackcalo:        @local::dune10kt_calomc
        pmtrackpid:         @local::standard_chi2pid
        pmtrackcali:        @local::protodunespmc_calibrationdedx
        pmtrackcalipid:     @local::standard_chi2pid  
        pmtrajfit:          @local::dunefd_pmalgtrajfitter
        pmtrajfitcalo:      @local::dune10kt_calomc
        pmtrajfitpid:       @local::standard_chi2pid
#        # photon detector reconstruction
        ophit:              @local::protodune_ophit 
        opflash:            @local::protodune_opflash

    }


    #Create path to run module
    decode: [ timingrawdecoder, ssprawdecoder, tpcrawdecoder, ctbrawdecoder, beamevent, caldata, gaushit, reco3d, hitpdune, linecluster, pandora, pandoraTrack, pandoraShower, pandoracalo, pandorapid, pmtrack, pmtrackcalo, pmtrackpid,  ophitInternal, ophitExternal, opflashInternal, opflashExternal ]

    output: [ out1 ]
    trigger_paths : [ decode ]
#    ana: [ beamana ]
    end_paths: [ output ]
}

#services: {
#}

outputs:
{
    out1:
        {
        compressionLevel: 1
        module_type: RootOutput
        fileName: "%ifb_reco.root"
        dataTier:    "full-reconstructed"
#        outputCommands: [ "drop *", "keep raw::RawDigitrecob*_*_*_*", "keep recob::*_*_*_*" ]
#       outputCommands: [ "keep *", "drop artdaq::Fragments_*_*TPC_*", "drop artdaq::Fragments_*_*FELIX_*", "drop raw::RawDigitrecob*_*_*_*" ]
       outputCommands: [ "keep *", "drop artdaq::Fragments_*_*TPC_*", "drop artdaq::Fragments_*_*FELIX_*" ]
  #      fileProperties: {
  #          maxInputFiles: 1
  #          }
        }
    }

source:
{
    module_type: RootInput
    fileNames: [ "/afs/cern.ch/user/s/sergiand/workspace/artdaq_devel/pdune_r1000077_sr01_20170629T181646_1_0.root" ]
    maxEvents : -1
}

#<friendly-type>_<module-label>_<instance-name>_<process-name>



physics.producers.caldata.DigitLabel: "tpcrawdecoder:daq"

services.RawDigitPrepService.AdcChannelToolNames: [
    "digitReader",                # Read RawDigit
    "pd_adcPedestalFit",          # Find pedestal
    "adcSampleFiller",            # Subtract pedestal, trivial calibration
    "pdsp_sticky_codes_ped",      # Flag sticky codes
    "pdsp_adcMitigate",           # Mitigate sticky codes
    "pdsp_timingMitigate",        # Mitigate FEMB302 timing
    "adcVintageDeconvoluter",     # Deconvolute
    "adcThresholdSignalFinder"    # Build ROIs
]

# Define PD reco modules for split input
physics.producers.ophitInternal:   @local::protodune_ophit_data_internal
physics.producers.ophitExternal:   @local::protodune_ophit_data_external
physics.producers.opflashInternal: @local::protodune_opflash_data_internal
physics.producers.opflashExternal: @local::protodune_opflash_data_external

# Tell PMA not to expect the CNN output
physics.producers.pmtrack.ClusterModuleLabel: "linecluster"
physics.producers.pmtrack.PMAlgTracking.TrackLikeThreshold: 0.0

# Basic noise mitigation
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.RoiThreshold: 10.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.RoiThreshold: 10.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2.RoiThreshold: 3.0

# Get rid of low frequency noise
services.SignalShapingServiceDUNE.IndUFilter: "(x>0.01)*gaus"
services.SignalShapingServiceDUNE.IndVFilter: "(x>0.01)*gaus"

# Use channel service for data
services.ChannelStatusService: @local::pdsp_channel_status

#stuff from protoDUNE_reco.fcl
services.Geometry.SortingParameters.ChannelsPerOpDet: 12

### Here, we overwrite ALL module labels with the ones defined above.
physics.producers.linecluster.HitFinderModuleLabel:    "hitpdune"

physics.producers.pmtrack.HitModuleLabel:                         "linecluster"
#physics.producers.pmtrack.ClusterModuleLabel:                     "emtrkmichelid:emtrkmichel"
#physics.producers.pmtrack.PMAlgTracking.TrackLikeThreshold:       0.63
physics.producers.pmtrack.PMAlgTracking.MinSeedSize2ndPass:       3
physics.producers.pmtrack.PMAlgTracking.Validation:               "adc"
physics.producers.pmtrack.PMAlgTracking.AdcValidationThr:         [0.8, 0.8, 1.0]
physics.producers.pmtrack.PMAlgTracking.RunVertexing:             true
physics.producers.pmtrack.PMAlgTracking.FlipToBeam:               true
physics.producers.pmtrack.PMAlgTracking.MatchT0inCPACrossing:     true
physics.producers.pmtrack.PMAlgCosmicTagging.TagOutOfDriftTracks: true
physics.producers.pmtrack.PMAlgCosmicTagging.TagFullHeightTracks: true
physics.producers.pmtrack.PMAlgCosmicTagging.TagNonBeamT0Tracks:  true

physics.producers.pmtrajfit.HitModuleLabel:            "linecluster"
physics.producers.pmtrajfit.PfpModuleLabel:            "pandora"

physics.producers.pmtrackcalo.TrackModuleLabel:         "pmtrack"
physics.producers.pmtrackcalo.SpacePointModuleLabel:    "pmtrack"
physics.producers.pmtrackcalo.T0ModuleLabel:            ""
physics.producers.pmtrackcalo.MakeTree:                 false
physics.producers.pmtrackpid.CalorimetryModuleLabel:  "pmtrackcalo"
physics.producers.pmtrackpid.TrackModuleLabel:        "pmtrack"
physics.producers.pmtrackcali.CalorimetryModuleLabel:           "pmtrackcalo"
physics.producers.pmtrackcali.TrackModuleLabel:                 "pmtrack"
physics.producers.pmtrackcalipid.CalorimetryModuleLabel:        "pmtrackcali"
physics.producers.pmtrackcalipid.TrackModuleLabel:              "pmtrack"

physics.producers.pmtrajfitcalo.TrackModuleLabel:         "pmtrajfit"
physics.producers.pmtrajfitcalo.SpacePointModuleLabel:    "pmtrajfit"
physics.producers.pmtrajfitcalo.T0ModuleLabel:            ""
physics.producers.pmtrajfitcalo.MakeTree:                 false
physics.producers.pmtrajfitpid.CalorimetryModuleLabel:  "pmtrajfitcalo"
physics.producers.pmtrajfitpid.TrackModuleLabel:        "pmtrajfit"

physics.producers.calo.TrackModuleLabel:               "costrk"
physics.producers.calo.SpacePointModuleLabel:          "costrk"
#physics.producers.kalmanhit.HitModuleLabel:            "hitfd"
#physics.producers.kalmanhit.ClusterModuleLabel:        "fuzzy"

#Pandora configurations
physics.producers.pandora.HitFinderModuleLabel:             "linecluster"
physics.producers.pandoraTrack.PFParticleLabel:             "pandora"
physics.producers.pandoraShower.PFParticleLabel:            "pandora"

physics.producers.pandoracalo.TrackModuleLabel:             "pandoraTrack"
physics.producers.pandoracalo.SpacePointModuleLabel:        "pandora"
physics.producers.pandoracalo.T0ModuleLabel:                ""
physics.producers.pandoracalo.MakeTree:                     false
physics.producers.pandorapid.CalorimetryModuleLabel:        "pandoracalo"
physics.producers.pandorapid.TrackModuleLabel:              "pandoraTrack"
physics.producers.pandoracali.CalorimetryModuleLabel:           "pandoracalo"
physics.producers.pandoracali.TrackModuleLabel:                 "pandoraTrack"
physics.producers.pandoracalipid.CalorimetryModuleLabel:        "pandoracali"
physics.producers.pandoracalipid.TrackModuleLabel:              "pandoraTrack"

#Optical detector configuration
physics.producers.ophit.InputModule:                        "opdigi"
physics.producers.opflash.InputModule:                      "ophit"
