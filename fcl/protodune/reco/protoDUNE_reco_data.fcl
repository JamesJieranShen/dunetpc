#include "protoDUNE_reco.fcl"

process_name: Reco

# Define PD reco modules for split input
physics.producers.ophitInternal:   @local::protodune_ophit_data_internal
physics.producers.ophitExternal:   @local::protodune_ophit_data_external
physics.producers.opflashInternal: @local::protodune_opflash_data_internal
physics.producers.opflashExternal: @local::protodune_opflash_data_external


physics.reco: [
    #TPC wire signals      
    caldata,
    # Hit finder
    gaushit, 
    # Space point finder
    reco3d, 
    # Hit disambiguation
    hitpdune,
    # Clustering
    linecluster,
    # Pandora and its track and shower building
    pandora, pandoraTrack, pandoraShower,
    # Calorimetry and PID for pandora
    pandoracalo, pandorapid,
    # PMA track reconstruction
    pmtrack,
    # PMA calorimetry and PID
    pmtrackcalo, pmtrackpid,
    # Photon detector reco modules
    ophitInternal, ophitExternal, opflashInternal, opflashExternal
]

physics.producers.caldata.DigitLabel: "tpcrawdecoder:daq"

services.RawDigitPrepService.AdcChannelToolNames: [
    "digitReader",                # Read RawDigit
    "pd_adcPedestalFit",          # Find pedestal
    "adcSampleFiller",            # Subtract pedestal, trivial calibration
    "pdsp_sticky_codes_ped",      # Flag sticky codes
    "pdsp_adcMitigate",           # Mitigate sticky codes
    "pdsp_timingMitigate",        # Mitigate FEMB302 timing
    "adcVintageDeconvoluter",     # Deconvolute
    "adcThresholdSignalFinder"    # Build ROIs
]

# Tell PMA not to expect the CNN output
physics.producers.pmtrack.ClusterModuleLabel: "linecluster"
physics.producers.pmtrack.PMAlgTracking.TrackLikeThreshold: 0.0

# Basic noise mitigation
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.RoiThreshold: 10.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.RoiThreshold: 10.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2.RoiThreshold: 3.0

# Get rid of low frequency noise
services.SignalShapingServiceDUNE.IndUFilter: "(x>0.01)*gaus"
services.SignalShapingServiceDUNE.IndVFilter: "(x>0.01)*gaus"

# Use channel service for data
services.ChannelStatusService: @local::pdsp_channel_status
services.DetectorPropertiesService: @local::protodunesp_detproperties
